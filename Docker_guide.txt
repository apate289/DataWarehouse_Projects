1. Install Docker

- Make sure Docker Desktop (Windows/Mac) or Docker Engine (Linux) is installed and running.
Verify with:

      docker --version

2. Pull the SQL Server image

- Microsoft provides official SQL Server images on Docker Hub.
Run:

      docker pull mcr.microsoft.com/mssql/server:2022-latest


ðŸ‘‰ Replace 2022-latest with another version if needed (2019-latest, etc.).

3. Run the SQL Server container

- Start the container with the required environment variables:

           docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=YourStrong@Passw0rd" -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server:2022-latest

           ACCEPT_EULA=Y â†’ Required to accept Microsoftâ€™s license.
           MSSQL_SA_PASSWORD â†’ Must be at least 8 characters with uppercase, lowercase, numbers, and symbols.
           -p 1433:1433 â†’ Maps containerâ€™s SQL port to host.
           --name sqlserver â†’ Name of the container.
           -d â†’ Run in detached mode.

4. Verify the container is running:
   
           docker ps


  You should see your SQL Server container running.

5. Connect to SQL Server

- From sqlcmd (inside container): 
           docker exec -it sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "YourStrong@Passw0rd"

- From local SQL client (SSMS, Azure Data Studio, etc.):

           Server: localhost,1433
           User: SA
           Password: YourStrong@Passw0rd

6. Persist Data with Volumes (Optional)

- By default, data is lost when the container stops. Mount a volume:

           docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=YourStrong@Passw0rd"  -p 1433:1433 --name sqlserver -v sqlvolume:/var/opt/mssql -d mcr.microsoft.com/mssql/server:2022-latest


Now the database files persist even if the container restarts.

7. Stopping & Starting

       Stop:
           docker stop sqlserver
       Start:
           docker start sqlserver
